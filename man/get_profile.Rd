% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_profile.R
\name{get_profile}
\alias{get_profile}
\alias{get_profile.bout}
\alias{get_profile.data.frame}
\alias{get_profile.list}
\title{Implement the sedentary profiles}
\usage{
get_profile(object, ...)

\method{get_profile}{bout}(object, method = c("both", "decisionTree", "randomForest"), ...)

\method{get_profile}{data.frame}(
  object,
  method = c("both", "decisionTree", "randomForest"),
  id = NULL,
  counts = NULL,
  wear = NULL,
  sb = 100,
  valid_indices = NULL,
  ...
)

\method{get_profile}{list}(object, method = c("both", "decisionTree", "randomForest"), ...)
}
\arguments{
\item{object}{input (either data frame or output from
\code{\link{sb_bout_dist}})}

\item{...}{further arguments passed to \code{\link{sb_bout_dist}} (used only
in data frame method)}

\item{method}{character. The model(s) to use for the prediction}

\item{id}{character scalar (optional). Column name on which to divide
\code{object} (if a data frame) into a list of separate objects}

\item{counts}{character scalar. Column name of the variable to use when
classifying sedentary behavior (and wear time, depending on the function)}

\item{wear}{character scalar [optional]. Column name of the variable to use
for determining wear time (logical vector with \code{TRUE} for wear time
minutes). If no value is provided, \code{\link{nhanes_wear}} is invoked on
the \code{counts} column}

\item{sb}{integer. The cut point to use for classifying sedentary behavior}

\item{valid_indices}{integer vector (optional) specifying which indices of
\code{is_sb} and {is_wear} correspond to valid measurement days (e.g. with
10+ hours of wear time on 4+ days)}
}
\value{
one or more profile assignments
}
\description{
Implement the sedentary profiles
}
\examples{
data(example_data, package = "SBprofiles")
get_profile(example_data, counts = "PAXINTEN")
get_profile(
  example_data, counts = "PAXINTEN", method = "randomForest"
)
get_profile(example_data, id = "PAXDAY", counts = "PAXINTEN")
get_profile(
  example_data, id = "PAXDAY",
  counts = "PAXINTEN", method = "decisionTree"
)
}
